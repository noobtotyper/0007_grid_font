from boltons.setutils import IndexedSet

hflows=[
(IndexedSet(['a', 'c', 'g', 'h', 'i', 'j', 'k', 'm', 'n', 'u', 'v', 'w', 'x', 'y', 'z', '1', ' ', '-', '.', ',', ':', ';', '¿', '¡', '!', "'", '"', '´', '`', '/', '\\', '(', ')', '{', '[', '>', 'ˇ', '°', '+', '=', '|', '×', '⭾', '⏎', '¬', '¸', 'ç', '·', '−']), IndexedSet(['a', 'd', 'h', 'i', 'l', 'm', 'n', 'ñ', 'u', 'v', 'w', 'x', 'y', 'z', ' ', ',', '?', "'", '`', '/', '\\', '(', ')', '}', ']', '<', 'ˇ', '+', '=', '|', '~', '×', '¸', '£', '·', '–', '—', '−']))
,
(IndexedSet(['b', 'd', 'e', 'f', 'l', 'ñ', 'o', 'p', 'q', 'r', 's', 't', '0', '2', '3', '4', '5', '6', '7', '8', '9', '_', '?', '}', ']', '<', '*', '^', '&', '%', '~', '¨', '@', '$', '€', '#', '¤', 'ß', '«', '»', '£', '–', '—']), IndexedSet(['b', 'c', 'e', 'f', 'g', 'j', 'k', 'o', 'p', 'q', 'r', 's', 't', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '-', '_', '.', ':', ';', '¿', '¡', '!', '"', '´', '{', '[', '>', '*', '^', '°', '&', '%', '¨', '@', '$', '€', '#', '⭾', '⏎', '¤', 'ß', '¬', 'ç', '«', '»']))
]


vflows=[
(IndexedSet(['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'j', 'n', 'ñ', 'r', 'x', 'z', '2', '3', '5', '9', ' ', '-', '_', ',', ';', "'", '"', '´', '`', '/', '(', ')', '{', '}', '<', '>', '*', '^', 'ˇ', '°', '+', '=', '|', '~', '¨', '@', '×', '⏎', '·', '–', '—', '−']), IndexedSet(['b', 'c', 'd', 'e', 'g', 'n', 'p', 'r', 'u', 'v', 'x', 'y', 'z', '2', '3', '5', '6', '7', ' ', '-', '_', '.', ',', '`', '\\', '(', ')', '{', '}', '<', '>', 'ˇ', '+', '=', '|', '×', '¬', '¸', 'ç', '·', '–', '—', '−']))
,
(IndexedSet(['i', 'k', 'l', 'm', 'o', 'p', 'q', 's', 't', 'u', 'v', 'w', 'y', '0', '1', '4', '6', '7', '8', '.', ':', '¿', '?', '¡', '!', '\\', '[', ']', '&', '%', '$', '€', '#', '⭾', '¤', 'ß', '¬', '¸', 'ç', '«', '»', '£']), IndexedSet(['a', 'f', 'h', 'i', 'j', 'k', 'l', 'm', 'ñ', 'o', 'q', 's', 't', 'w', '0', '1', '4', '8', '9', ':', ';', '¿', '?', '¡', '!', "'", '"', '´', '/', '[', ']', '*', '^', '°', '&', '%', '~', '¨', '@', '$', '€', '#', '⭾', '⏎', '¤', 'ß', '«', '»', '£']))
]


def is_valid(word):
    if len(word)==1:
        return True
    for i in range(len(word)):
        connects=word[i-1] in hflows[1][0]
        if connects:
            if word[i] not in hflows[1][1]:
                return False
        else:
            if word[i] not in hflows[0][1]:
                return False
    return True

with open("/media/meru/data/Coding/FrequencyWords-master/content/2018/en/en_full.txt","r") as f:
    words=[line.split()[0] for line in f.readlines()]
    valid_words=[word for word in words if is_valid(word)]
    #print(words[:20])
    #print(valid_words[:10])
    #print(len(words),len(valid_words))
    for word in valid_words:
        print(word)